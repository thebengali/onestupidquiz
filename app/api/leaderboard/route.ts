import { NextRequest, NextResponse } from 'next/server'; import { serverClient } from '@/lib/supabase';
export async function GET(_req: NextRequest){ const sb=serverClient(); const sevenDaysAgo=new Date(Date.now()-7*24*60*60*1000).toISOString(); const { data, error }=await sb.from('submissions').select('user_id, stupid_points, created_at').gte('created_at', sevenDaysAgo).not('user_id','is',null); if(error) return NextResponse.json({error:error.message},{status:500}); const totals=new Map<string,number>(); for(const row of data ?? []){ const u=row.user_id as string; const p=Number(row.stupid_points)||0; totals.set(u,(totals.get(u)??0)+p);} const items=Array.from(totals.entries()).map(([user,points])=>({user,points:Number(points.toFixed(3))})).sort((a,b)=>b.points-a.points).slice(0,10); return NextResponse.json({rangeDays:7, items}); }
