import { NextRequest, NextResponse } from 'next/server'; import { serverClient } from '@/lib/supabase';
function dateISTISO(d: Date): string { const fmt=new Intl.DateTimeFormat('en-CA',{ timeZone:'Asia/Kolkata', year:'numeric', month:'2-digit', day:'2-digit' }); const parts=fmt.formatToParts(d); const y=parts.find(p=>p.type==='year')!.value; const m=parts.find(p=>p.type==='month')!.value; const dd=parts.find(p=>p.type==='day')!.value; return `${y}-${m}-${dd}`; }
export async function GET(req: NextRequest){ const user=req.nextUrl.searchParams.get('user'); if(!user) return NextResponse.json({error:'Missing user'},{status:400}); const sb=serverClient(); const { data, error }=await sb.from('submissions').select('created_at').eq('user_id', user).order('created_at', { ascending: false }).limit(60); if(error) return NextResponse.json({error:error.message},{status:500}); const dates=new Set<string>(); for(const r of data ?? []) dates.add(dateISTISO(new Date(r.created_at))); const today=new Date(); let streak=0; for(let i=0;i<365;i++){ const d=new Date(today.getTime()-i*24*60*60*1000); const iso=dateISTISO(d); if(dates.has(iso)) streak++; else break; } return NextResponse.json({streak}); }
