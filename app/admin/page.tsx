'use client'; import React from 'react';
type QuizDay={ quiz_date:string; title:string; questions:{ idx:number; type:'mcq'|'mcmr'; prompt:string; options:string[]; answer:any; explanation?:string }[]; };
function parseCSV(text:string): QuizDay[]{ const lines=text.split(/\r?\n/).filter(l=>l.trim().length>0); const header=lines.shift()!.split(',').map(s=>s.trim().toLowerCase()); const idxQuizDate=header.indexOf('quiz_date'); const idxIdx=header.indexOf('idx'); const idxType=header.indexOf('type'); const idxPrompt=header.indexOf('prompt'); const idxA=header.indexOf('option_a'); const idxB=header.indexOf('option_b'); const idxC=header.indexOf('option_c'); const idxD=header.indexOf('option_d'); const idxAns=header.indexOf('answer'); const idxExpl=header.indexOf('explanation'); const byDate=new Map<string,QuizDay>(); for(const line of lines){ const cols=line.split(',').map(s=>s.trim()); const date=cols[idxQuizDate]; const qidx=Number(cols[idxIdx]); const type=(cols[idxType]||'mcq') as 'mcq'|'mcmr'; const prompt=cols[idxPrompt]; const options=[cols[idxA],cols[idxB],cols[idxC],cols[idxD]].filter(Boolean); const ansRaw=cols[idxAns]; const answer= type==='mcmr'? ansRaw.split('|').map(s=>s.trim()): ansRaw; const explanation=cols[idxExpl]||null; if(!byDate.has(date)) byDate.set(date,{ quiz_date:date, title:`One Stupid Quiz — ${date}`, questions:[] }); byDate.get(date)!.questions.push({ idx:qidx, type, prompt, options, answer, explanation: explanation || undefined }); } return Array.from(byDate.values()).map(qd=>({ ...qd, questions: qd.questions.sort((a,b)=>a.idx-b.idx) })); }
export default function Admin(){ const [key,setKey]=React.useState(''); const [text,setText]=React.useState(''); const [status,setStatus]=React.useState<string>(''); async function importJSON(jsonText:string){ try{ const payload=JSON.parse(jsonText); const res=await fetch('/api/admin/import',{ method:'POST', headers:{'Content-Type':'application/json','x-admin-key':key}, body: JSON.stringify(payload)}); if(!res.ok){ const e=await res.json().catch(()=>({error:'Unknown error'})); setStatus('Error: '+(e.error||res.status)); } else { const data=await res.json(); setStatus(`Imported ${data.inserted} quiz day(s).`);} } catch(e:any){ setStatus('Invalid JSON: '+e.message);} } async function loadStarter(){ const res=await fetch('/starter/starter.json'); const data=await res.text(); setText(data); } async function onCSVFile(e:React.ChangeEvent<HTMLInputElement>){ const file=e.target.files?.[0]; if(!file) return; const text=await file.text(); const days=parseCSV(text); const payload={ quizzes: days }; setText(JSON.stringify(payload,null,2)); } return (<div><h1>Admin — Import Quizzes</h1><p className='small'>Enter your admin key (set ADMIN_SECRET in env). You can paste JSON, load starter, or upload a CSV.</p><input placeholder='Admin key' value={key} onChange={e=>setKey(e.target.value)} style={{width:'100%', padding:10, border:'1px solid #e5e5e5', borderRadius:8}}/><div style={{display:'flex', gap:8, marginTop:8, flexWrap:'wrap'}}><button className='btn' onClick={loadStarter}>Load Starter Content</button><label className='btn' style={{display:'inline-block'}}>Upload CSV<input type='file' accept='.csv' onChange={onCSVFile} style={{display:'none'}}/></label><button className='btn' onClick={()=>importJSON(text)} disabled={!key}>Import JSON</button></div><textarea value={text} onChange={e=>setText(e.target.value)} placeholder='{"quizzes":[...]}' style={{width:'100%', height:300, marginTop:8, padding:10, border:'1px solid #e5e5e5', borderRadius:8}}/>{status && <p className='small'>Status: {status}</p>}<hr/><p className='small'>CSV columns: quiz_date,idx,type,prompt,option_a,option_b,option_c,option_d,answer,explanation. For multiple correct answers, separate with `|`.</p></div>); }
